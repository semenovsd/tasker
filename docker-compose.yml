version: '3.7'

services:

  db:
    container_name: db
    image: postgres:13.0
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    networks:
      - tasker_backend
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.26
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
      PGADMIN_ENABLE_TLS: "True"
    volumes:
      - ./pgadmin/tmp/servers.json:/pgadmin4/servers.json
      - ./pgadmin/private/var/lib/pgadmin:/var/lib/pgadmin
      - $SSL_CERT:/certs/server.cert:ro
      - $SSL_PRIV:/certs/server.key:ro
    expose:
      - $PGADMIN_PORT
    networks:
      - tasker_backend
    restart: always
    depends_on:
      - db

  web:
    container_name: web
    build:
      context: ./$APP_BASE_DIR
      args:
        APP_BASE_DIR: $APP_BASE_DIR
    command: gunicorn djangoproject.wsgi:application --bind $WEBAPP_HOST:$WEBAPP_PORT
    volumes:
          - ./$APP_BASE_DIR/staticfiles:/$APP_BASE_DIR/staticfiles/
    env_file:
      - .env
    expose:
      - $WEBAPP_PORT
    networks:
      - tasker_backend
    restart: always
    depends_on:
      - db

  nginx:
    container_name: nginx
    image: nginx:1.19.2-alpine
    volumes:
      - ./$APP_BASE_DIR/staticfiles:/usr/share/nginx/html/staticfiles/:ro
      - ./nginx/templates:/etc/nginx/templates
      - $SSL_CERT:/etc/ssl/url_cert.pem:ro
      - $SSL_PRIV:/etc/ssl/url_private.key:ro
    environment:
      - SERVER_NAME=$SERVER_NAME
      - PGADMIN_PORT=$PGADMIN_PORT
      - WEBAPP_PORT=$WEBAPP_PORT
      - NGINX_HTTP_PORT=$NGINX_HTTP_PORT
      - NGINX_HTTPS_PORT=$NGINX_HTTPS_PORT
    ports:
      - $SERVER_HTTP_PORT:$NGINX_HTTP_PORT
      - $SERVER_HTTPS_PORT:$NGINX_HTTPS_PORT
    networks:
      - tasker_backend
    restart: unless-stopped
    depends_on:
      - web

networks:
  tasker_backend:
